# Tip8-26953
# Найдите количество пятизначных восьмеричных чисел, в которых все цифры различны и никакие две четные или нечетные не стоят рядом.
#
# максимальное пятизначное число в восьмиричной системе - это 77777, минимальное - 10000. Переведем в десятичную систему:
max_decimal = int('77777', 8)
min_decimal = int('10000', 8)
s = set()
count = 0
# Переберем все числа
for i in range(min_decimal, max_decimal):
    # сначала переведем каждое число обратно в восьмиричную систему
    octal_number = oct(i)[2:]
    # переберем отдельные цифры, из которых состоит число
    for number in octal_number:
        # добавим цифру в набор. по свойству наборов, в наборе могут быть только уникальные элементы. этим добьемся удаления повторяющихся чисел
        s.add(number)
    # если после добавления всех чисел в набор, длина набора равна 5, найдено число с уникальными цифрами
    if len(s) == 5:
        # проверим каждую цифру на четность и сохраним в соответствующей переменной
        first = int(octal_number[0]) % 2 == 0
        second = int(octal_number[1]) % 2 == 0
        third = int(octal_number[2]) % 2 == 0
        fourth = int(octal_number[3]) % 2 == 0
        fifth = int(octal_number[4]) % 2 == 0
        # если рядом не стоят одинаковые по четности цифры, число нам подходит. Увеличим счетчик таких чисел.
        if first != second and second != third and third != fourth and fourth != fifth:
            count += 1
    s = set()
print(count)
# Ответ: 504
