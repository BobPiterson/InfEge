# Системный администратор раз в неделю создаёт архив пользовательских файлов. 
# Однако объём диска, куда он помещает архив, может быть меньше, чем суммарный объём архивируемых файлов. 
# Известно, какой объём занимает файл каждого пользователя.
# По заданной информации об объёме файлов пользователей и свободном объёме на архивном диске определите 
# максимальное число пользователей, чьи файлы можно сохранить в архиве, 
# а также максимальный размер имеющегося файла, который может быть сохранён в архиве, 
# при условии, что сохранены файлы максимально возможного числа пользователей.
# 
# В первой строке входного файла находятся два числа: 
# S  — размер свободного места на диске (натуральное число, не превышающее 10 000) и 
# N  — количество пользователей (натуральное число, не превышающее 3000). 
# В следующих N строках находятся значения объёмов файлов каждого пользователя (все числа натуральные, не превышающие 100), 
# каждое в отдельной строке.
# Запишите в ответе два числа: сначала наибольшее число пользователей, чьи файлы могут быть помещены в архив, 
# затем максимальный размер имеющегося файла, который может быть сохранён в архиве, при условии, 
# что сохранены файлы максимально возможного числа пользователей. 
#
m = []
with open('C:/Users/vngorlachev/Documents/VisualStudioCode/Projects/Новый план/27885.txt') as file:
    for line in file:
        str_of_file = line.split()
        # добавлять в конец списка: 
        m.append(str_of_file)

    # из первой строки файла забираем значения S и N
    s = int(m[0][0])
    n = int(m[0][1])
    # удалим из списка первый элемент
    m.pop(0)
    # Преобразовать строковые в int, при этом вложенный список переделать в простой список
    for i in range(n):
        m[i] = int(m[i][0])

    m.sort(reverse=False)

    i = 0
    maxsize = 0
    out =[]
    summa = 0
    maxsumma = 0
    while i < n:
        if summa + m[i] <= s:
            out.append(m[i])
            #print('Добавляем m[i] =', m[i])
        else:
            #print('Вычитаем m[i] =', m[i])
            out.pop()
            if sum(out) + m[i] >= s:
                # Если после вычитания последнего элемента и добавления следующего сумма опять больше S, 
                # вернем в список предыдущий элемент, как наилучший. зафиксируем размер максимального пользователя и закончим цикл
                out.append(m[i-1])
                if m[i] > maxsize: maxsize = m[i]
                break
            i = i - 1
            
        summa = sum(out)
        #print('---', summa, m[i], len(out), 'номер пользователя =', i)
        if summa > maxsumma: maxsumma = summa
        i += 1
    
    print(len(out), maxsize)
        
    
    
