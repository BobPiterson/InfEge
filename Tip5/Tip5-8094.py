# 8094
# На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
#1.  Строится двоичная запись числа N.
#2.  К этой записи дописываются справа ещё два разряда по следующему правилу:
#а)  складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа). Например, запись 11100 преобразуется в запись 111001;
#б)  над этой записью производятся те же действия  — справа дописывается остаток от деления суммы цифр на 2.
#Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
#Укажите минимальное число R, которое превышает 43 и может являться результатом работы алгоритма. В ответе это число запишите в десятичной системе.

def summa_bit(s):
# s - число в двоичной форме. Функция считает сумму всех единиц в двоичной записи.
    summa = 0
    for c in s:
        summa = summa + int(c)
    return summa

def trans(x):
    t1 = bin(x)[2:] # перевод в двоичную систему
    #print(t1)
    t2 = t1 + str(summa_bit(t1) % 2)
    #print(t2)
    t3 = t2 + str(summa_bit(t2) % 2)
    #print(t3)
    return int(t3, 2) # перевод в десятичную систему

print("N \t R")
for N in range(1, 15):
    tmp = trans(N)
    if tmp > 43:
        print(N, '\t', tmp)
        #break
# Ответ = 46
