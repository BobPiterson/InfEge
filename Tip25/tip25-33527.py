import math
x = 101_000_000
y = 102_000_000
# функция поиска делителей
def deliteli(a):
    # По условию  задачи, нужно посчитать только четные делители.
    # Четные делители могут иметь только четные числа, т.к. нечетные не могут иметь ни одного четного делителя
    if a % 2 == 0:
        count_deli = 0
        s = []
        # количество делителей, кроме самого числа, которые нужно найти
        kolvo = 2
        # перебираем все числа от 2 до корня из заданного числа
        # перебирать до корня гораздо быстрее, чем число до конца. Только нужно учитывать один нюанс
        for i in range(2, int(math.sqrt(a)) + 1):
            # проверяем, является ли число делителем, а также проверяем, является ли делитель четным
            # в этом случае у числа нужно найти только два делителя, т.к. само четное число тоже является четным делителем
            if a % i == 0:
                if i % 2 == 0:
                    # если является, добавляем его в набор (для самопроверки работы)
                    s.append(i)
                    count_deli += 1
                # Так как мы перебираем делители только до корня из заданного числа,
                # нужно учесть в качестве делителя зеркальный делитель, который больше этого корня
                # например, если есть число 16 и нужно найти все его четные делители (2, 4, 8, 16)
                # корень будет равен 4, поэтому перебор делителей пройдет только до 4
                # при переборе будут найдены делители 2 и 4, а делитель 8 будет упущен
                # чтобы не упускать такие делители, поделим заданное число на найденный делитель
                # и найдем еще два делителя: 16/2 = 8, 16/4 = 4.
                k = a // i
                # проверим найденный зеркальный делитель на четность,
                # и убедимся, что мы его еще не посчитали, если вдруг окажется что частное "k" равно делителю
                if k % 2 == 0 and i != k:
                    s.append(k)
                    count_deli += 1
                # если количество найденных делителей превысило заданное, дальше не ищем
                if count_deli > kolvo:
                    break
        if count_deli == kolvo:
            s.append(a)
            print('число ', a, ' имеет ровно', kolvo+1, 'четных делителя: ', sorted(s))
    return

# перебираем все числа из заданного диапазона
for i in range(x, y + 1):
    deliteli(i)