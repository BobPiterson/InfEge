# У Пети все ходы нечетные, а у Ивана - четные
# функция поиска решений для 4-х ходов
def f(x, y, h):
    # Если пришло время 3 или 5 хода, а сумма уже больше 84, т.е Иван сделал предыдущий ход победным, возращаем 1
    if (h == 3 or h == 5) and x + y >= 84:
        return 1
    # Если пришло время 5 хода, а победа не достигнута, Иван проиграл. Возращаем 0
    elif h == 5 and x + y < 84:
        return 0
    # Если победа достигнута в четном ходу до 5 хода, Иван проиграл и возращаем 0
    elif x + y >= 84 and h < 5:
        return 0
    # Если не выполнено ни одно из условий, продолжаем делать ходы 
    else:
        if h % 2 == 0:
            # Если ход четный, т.е. ход Ивана, делаем очередной ход, учитывая что хотя-бы один вариант нужен выигрышный (поэтому or)
            #print(x, y, h)
            return f(x + 1, y, h + 1) or f(x, y + 1, h + 1) or f(x, y * 2, h + 1) or f(x * 3, y, h + 1)  # стратегия победителя
        else:
            # Ход Петра, учитывает, что все варианты ходов должны приводить к выигрышу
            return f(x + 1, y, h + 1) and f(x, y + 1, h + 1) and f(x, y * 2, h + 1) and f(x * 3, y, h + 1)  # стратегия проигравшего(любой ход)

# функция поиска решений для 2-х ходов 
def f1(x, y, h):
    if h == 3 and x + y >= 84:
        return 1
    elif h == 3 and x + y < 84:
        return 0
    elif x + y >= 84 and h < 3:
        return 0
    else:
        if h % 2 == 0:
            return f1(x + 1, y, h + 1) or f1(x, y + 1, h + 1) or f1(x, y * 2, h + 1) or f1(x * 3, y, h + 1)  # стратегия победителя
        else:
            return f1(x + 1, y, h + 1) and f1(x, y + 1, h + 1) and f1(x, y * 2, h + 1) and f1(x * 3, y, h + 1)  # стратегия проигравшего(любой ход)

# Перебираем все возможные х в соответствии с условием задачи 
for x in range(1, 68):
    # Если найден выигрыш, выводим его:
    if f(x, 16, 1) == 1:
        print(x)
print("====")
for x in range(1, 68):
    if f1(x, 16, 1) == 1:
        print(x)